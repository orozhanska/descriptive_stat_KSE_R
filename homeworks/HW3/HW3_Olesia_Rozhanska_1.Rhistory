setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- read.csv("suicide.csv")
head(df, 10)
colnames(df)
summary(df)
# I feel the sheer need to find out the country of year where 22338.0 suicides where recorded
df[df$suicides_no == 22338.0, ] #Russia 1994, no surprise. Found the proof in the internet, though numbers differ
#which years and countries are concerned?
unique(df$year)
unique(df$country)
length(unique(df$country)) #we have data for 101 country
unique(df$generation)
unique(subset(df, df$country == "United Kingdom")$year)
unique(subset(df, df$country == "Oman")$year)
# so we have data for different years for different countries
unique(subset(df, df$country == "Republic of Korea")$age)
#checked some of the countries to understand if each has every age group - but we can see it below also
summary(factor(df$age))
#let's look for gender stats
summary(factor(df$sex)) # so no missing data for some sexes (maybe for both)
df$gdp_for_year....
as.numeric(df$gdp_for_year)  #data is with commas, so is not converted properly
df$gdp_for_year.... <- gsub(",", "", df$gdp_for_year....)  # let's remove commas
df$gdp_for_year.... <- as.numeric(df$gdp_for_year....)
df
summary(df)
(df$suic_100k <- round( ((df$suicides_no / df$population) * 100000), 2))
df[df$suicides.100k.pop != df$suic_100k, c("country", "year", "suicides.100k.pop", "suic_100k")]
iqr_outliers <- function(df, column_name, print_outliers = F, all = F){ # df is datafarame, x is column_for_finding_outliers
x <- df[[column_name]]
q1 <- quantile(x, 0.25, na.rm = T)
q3 <- quantile(x, 0.75, na.rm = T)
iqr <- q3 - q1
outliers <- df[x < (q1 - 1.5 * iqr) | x > (q3 + 1.5 * iqr), ]
cat("Found", nrow(outliers), "outliers in df\n")
if (print_outliers){
if (all){
print(outliers)
} else{
print(head(outliers))
}
}
return(nrow(outliers))
}
#
general_outliers <- iqr_outliers(df, "suic_100k", print_outliers = T)
#
by_gender_outliers <- iqr_outliers(subset(df, df$sex == "male"), "suic_100k") + iqr_outliers(subset(df, df$sex == "female"), "suic_100k")
#
by_age_outliers <- 0
for (a in unique(df$age)){
num <- iqr_outliers(subset(df, df$age == a), "suic_100k")
by_age_outliers <- by_age_outliers + num
}
by_age_outliers
#
by_age_gender <- 0
for (a in unique(df$age)){
for (g in unique(df$sex)){
num <- iqr_outliers(subset(df, df$age == a & df$sex == g), "suic_100k")
by_age_gender <- by_age_gender + num
}
}
by_age_gender
?tapply
suicides_by_country <- tapply(df$suic_100k, df$country, mean)
barplot(suicides_by_country, xlab = "country", ylab = "S/100k") #not representative, but still
df[df$suicides.100k.pop == max(df$suicides.100k.pop), ]
#i cannot travel in time though :(
subset(df, df$year == max(df$year))[(df$suicides.100k.pop == max(df$suicides.100k.pop)), ]
#i cannot travel in time though :(
subset(df, df$year == max(df$year))[(df$suicides.100k.pop == max(df$suicides.100k.pop, na.rm = T)), ]
#i cannot travel in time though :(
subset(df, df$year == max(df$year, na.rm = T))[(df$suicides.100k.pop == max(df$suicides.100k.pop, na.rm = T)), ]
df$year
class(df$year)
#i cannot travel in time though :(
df_latest <- subset(df, df$year == max(df$year))
df_latest[(df$suicides.100k.pop == max(df$suicides.100k.pop)), ]
df_latest[df$suicides.100k.pop == max(df$suicides.100k.pop), ]
na.omit(df_latest)
df_latest[df$suicides.100k.pop == max(df$suicides.100k.pop), ]
#i cannot travel in time though :(
df_latest <- subset(df, df$year == max(df$year))
df_latest[df_latest$suicides.100k.pop == max(df_latest$suicides.100k.pop), ]
#checked some of the countries to understand if each has every age group - but we can see it below also
summary(factor(df$age))
#i cannot travel in time though :(
df_latest <- subset(df, df$year == max(df$year), df$age == "15-24 years")
df_latest[df_latest$suicides.100k.pop == max(df_latest$suicides.100k.pop), ]
#i cannot travel in time though :(
df_latest <- subset(df, df$year == max(df$year) & df$age == "15-24 years")
df_latest[df_latest$suicides.100k.pop == max(df_latest$suicides.100k.pop), ]
#i cannot travel in time though :(
df_latest <- subset(df, df$year == max(df$year) & df$age == "15-24 years") & df$sex == "female")
#i cannot travel in time though :(
df_latest <- subset(df, df$year == max(df$year) & df$age == "15-24 years" & df$sex == "female")
df_latest[df_latest$suicides.100k.pop == max(df_latest$suicides.100k.pop), ]
par(cex.axis = 0.8)
suicides_by_year <- tapply(df$suic_100k, df$year, mean)
barplot(suicides_by_year, horiz = T, xlab = "S/100k", ylab = "year", las = 2) #not representative, but still
# Solution:
# first some graphs
# We need to look at GDP per capita here to normalize regarding population
# (as we already did with number of suicides, taking them per 100k)
plot((df$gdp_per_capita..../1000), df$suic_100k, xlab = "GDP_pc, thousands $", ylab = "Suicides per 100k", col = "red", pch = 16, cex = 0.3) #red for more effect :)
female <- subset(df, df$sex == "female")
male <- subset(df, df$sex == "male")
par(mfrow = c(1,2))
plot((female$gdp_per_capita..../1000),
female$suic_100k,
xlab = "GDP_pc, thousands $",
ylab = "Female | Suicides per 100k",
col = "red",
pch = 16,
cex = 0.3)
plot((male$gdp_per_capita..../1000),
male$suic_100k,
xlab = "GDP_pc, thousands $",
ylab = "Male | Suicides per 100k",
col = "red",
pch = 16,
cex = 0.3)
par(mfrow = c(3,2))
for (a in c("5-14 years", "15-24 years", "25-34 years", "35-54 years", "55-74 years", "75+ years")){
sub <- subset(df, df$age == a)
plot((sub$gdp_per_capita..../1000),
sub$suic_100k,
xlab = "GDP_pc, thousands $",
ylab = paste(a, "| S / 100k"),
col = "red",
pch = 16,
cex = 0.3)
}
cor(df$gdp_per_capita...., df$suic_100k)
df$gdp_per_capita....
df$suic_100k
# almost uncorrelated, really?
cor(col1, col2, method = "spearman")
# almost uncorrelated, really?
cor(df$gdp_per_capita...., df$suic_100k, method = "spearman")
df$gdp_per_capita....
df[[c("df$gdp_per_capita....", "df$suic_100k")]]
df[, c("df$gdp_per_capita....", "df$suic_100k")]
df[, c("gdp_per_capita....", "suic_100k")]
conditions <- list()
for (a in unique(df$age)){
for (g in unique(df$sex)){
con <- df[df$age == a & df$sex == g]
conditions <- c(conditions, list(con))
}
}
conditions <- list()
for (a in unique(df$age)){
for (g in unique(df$sex)){
con <- df$age == a & df$sex == g
conditions <- c(conditions, list(con))
}
}
conditions
unique(df$age)
df_copy <- df # do not want to play with real dataset
for (cond in conditions){
df_cond <- df[cond]
q1 <- quantile(df_cond, 0.25, na.rm = T)
q3 <- quantile(df_cond, 0.75, na.rm = T)
iqr <- q3 - q1
outliers <- df_cond < (q1 - 1.5 * iqr) | df_cond > (q3 + 1.5 * iqr)
print(paste("Mean imputation of", nrow(df_copy[cond & outliers]), "outliers under condition"))
df_copy[cond & outliers] <- mean(df_copy[cond], na.rm = T)
}
conditions
for (cond in conditions){
df_cond <- df_copy[cond]
q1 <- quantile(df_cond, 0.25, na.rm = T)
q3 <- quantile(df_cond, 0.75, na.rm = T)
iqr <- q3 - q1
outliers <- df_cond < (q1 - 1.5 * iqr) | df_cond > (q3 + 1.5 * iqr)
print(paste("Mean imputation of", nrow(df_copy[cond & outliers]), "outliers under condition"))
df_copy[cond & outliers] <- mean(df_copy[cond], na.rm = T)
}
for (cond in conditions){
df_cond <- df_copy[cond, ]
q1 <- quantile(df_cond, 0.25, na.rm = T)
q3 <- quantile(df_cond, 0.75, na.rm = T)
iqr <- q3 - q1
outliers <- df_cond < (q1 - 1.5 * iqr) | df_cond > (q3 + 1.5 * iqr)
print(paste("Mean imputation of", nrow(df_copy[cond & outliers]), "outliers under condition"))
df_copy[cond & outliers] <- mean(df_copy[cond], na.rm = T)
}
for (cond in conditions){
df_cond <- df_copy[cond, ]
q1 <- quantile(df_cond$suic_100k, 0.25, na.rm = T)
q3 <- quantile(df_cond$suic_100k, 0.75, na.rm = T)
iqr <- q3 - q1
outliers <- df_cond$suic_100k < (q1 - 1.5 * iqr) | df_cond$suic_100k > (q3 + 1.5 * iqr)
print(paste("Mean imputation of", sum(outliers), "outliers under condition"))
df_copy$suic_100k[cond & outliers] <- mean(df_copy$suic_100k[cond, ], na.rm = T)
}
for (cond in conditions){
df_cond <- df_copy[cond, ]
q1 <- quantile(df_cond$suic_100k, 0.25, na.rm = T)
q3 <- quantile(df_cond$suic_100k, 0.75, na.rm = T)
iqr <- q3 - q1
outliers <- df_cond$suic_100k < (q1 - 1.5 * iqr) | df_cond$suic_100k > (q3 + 1.5 * iqr)
print(paste("Mean imputation of", sum(outliers), "outliers under condition"))
df_copy$suic_100k[cond & outliers] <- mean(df_copy$suic_100k[cond], na.rm = T)
}
warnings()
df_copy <- df# do not want to play with real dataset
summary(df_copy$suic_100k)
for (cond in conditions){
df_cond <- df_copy[cond, ]
q1 <- quantile(df_cond$suic_100k, 0.25, na.rm = T)
q3 <- quantile(df_cond$suic_100k, 0.75, na.rm = T)
iqr <- q3 - q1
outliers <- df_cond$suic_100k < (q1 - 1.5 * iqr) | df_cond$suic_100k > (q3 + 1.5 * iqr)
outliers <- cond & outliers
print(paste("Mean imputation of", sum(outliers), "outliers under condition"))
df_copy$suic_100k[outliers] <- mean(df_copy$suic_100k[cond], na.rm = T)
}
summary(df_copy$suic_100k)
cor(df_copy$suic_100k, df_copy$gdp_per_capita....)
cor(df)
sapply(df, is.numeric)
cor(df[sapply(df, is.numeric), ])
df[sapply(df, is.numeric), ]
cor(na.omit(df[sapply(df, is.numeric), ]))
numeric_df <- na.omit(df[sapply(df, is.numeric)])
cormat <- cor(numeric_df)
cormat
savehistory("HW3_Olesia_Rozhanska_1.Rhistory")
